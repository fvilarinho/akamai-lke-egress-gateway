apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: http-proxy
spec:
  selector:
    matchLabels:
      app: http-proxy
  template:
    metadata:
      labels:
        app: http-proxy
    spec:
      nodeSelector:
        egressGateway: "true"
      containers:
        - name: http-proxy
          image: ubuntu/squid:latest
          volumeMounts:
            - name: http-proxy-config
              mountPath: /etc/squid/squid.conf
              subPath: squid.conf
      volumes:
        - name: http-proxy-config
          configMap:
            name: http-proxy-config
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: tcp-proxy
spec:
  selector:
    matchLabels:
      app: tcp-proxy
  template:
    metadata:
      labels:
        app: tcp-proxy
    spec:
      nodeSelector:
        egressGateway: "true"
      containers:
        - name: tcp-proxy
          image: haproxy:latest
          volumeMounts:
            - name: tcp-proxy-config
              mountPath: /usr/local/etc/haproxy/haproxy.cfg
              subPath: haproxy.cfg
      volumes:
        - name: tcp-proxy-config
          configMap:
            name: tcp-proxy-config
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: client
spec:
  selector:
    matchLabels:
      app: client
  template:
    metadata:
      labels:
        app: client
    spec:
      nodeSelector:
        workerNodes: "true"
      containers:
        - name: client
          image: alpine:latest
          command: [ "sleep", "infinity" ]
          tty: true
          env:
            - name: http_proxy
              value: "http://web-gateway:3128"
            - name: https_proxy
              value: "http://web-gateway:3128"